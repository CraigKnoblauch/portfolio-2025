/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 nrl.glb 
*/

import React, { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export const NrlModel = forwardRef((props, ref) => {
  const { nodes, materials } = useGLTF('./models/nrl.glb')
  const matcapManager = props.matcapManager

  const black = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials.black.name)})
  const paper = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials.paper.name)})
  const brightWhite = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['bright-white'].name)})
  const nrlAccent = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['nrl-accent'].name)})
  const dishSupport = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['dish-support'].name)})
  const rockGray = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['rock-gray'].name)})
  const platformGray = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['platform-gray'].name)})

  return (
    <group ref={ref} {...props} dispose={null}>
      <primitive object={nodes.nrl_windows} material={black} />
      <primitive object={nodes.nrl_stairs} material={paper} />
      <primitive object={nodes.nrl_walls} material={brightWhite} />
      <primitive object={nodes.nrl_accent} material={nrlAccent} />
      <primitive object={nodes.nrl_dish_support} material={dishSupport} />
      <primitive object={nodes.nrl_under_dish_support} material={rockGray} />
      <primitive object={nodes.nrl_collector} material={dishSupport} />
      <primitive object={nodes.nrl_dish} material={platformGray} />
    </group>
  )
})

useGLTF.preload('./models/nrl.glb')
