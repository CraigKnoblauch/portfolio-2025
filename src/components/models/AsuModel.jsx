/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 asu.glb 
*/

import React, { useRef, forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export const AsuModel = forwardRef((props, ref) => {
  const { nodes, materials } = useGLTF('./models/asu.glb')
  const matcapManager = props.matcapManager;

  const platformGray = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['platform-gray'].name)})
  const asuSoil = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['asu-soil'].name)})
  const darkBrown = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['dark-brown'].name)})
  const asuLiteRock = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['asu-lite-rock'].name)})
  const leafGreen = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['leaf-green'].name)})
  const asuRed = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['asu-red'].name)})
  const gold = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials.gold.name)})
  const gradCap = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['grad-cap'].name)})
  const cactusFlowerPink = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['cactus-flower-pink'].name)})

  return (
    <group ref={ref} {...props} dispose={null}>
      <primitive object={nodes.asu_platform} material={platformGray} />
      <primitive object={nodes.asu_soil} material={asuSoil} />
      <primitive object={nodes.asu_dark_tall_rock} material={darkBrown} />
      <primitive object={nodes.asu_lite_tall_rock} material={asuLiteRock} />
      <primitive object={nodes.asu_dark_rock001} material={darkBrown} />
      <primitive object={nodes.asu_dark_rock002} material={darkBrown} />
      <primitive object={nodes.asu_lite_rock001} material={asuLiteRock} />
      <primitive object={nodes.asu_lite_rock002} material={asuLiteRock} />
      <primitive object={nodes.asu_lite_rock003} material={asuLiteRock} />
      <primitive object={nodes.asu_lite_rock004} material={asuLiteRock} />
      <primitive object={nodes.asu_dark_rock003} material={darkBrown} />
      <primitive object={nodes.asu_dark_rock004} material={darkBrown} />
      <primitive object={nodes.asu_dark_rock005} material={darkBrown} />
      <primitive object={nodes.asu_dark_rock006} material={darkBrown} />
      <primitive object={nodes.asu_dark_rock007} material={darkBrown} />
      <primitive object={nodes.asu_dark_rock008} material={darkBrown} />
      <primitive object={nodes.asu_lite_rock005} material={asuLiteRock} />
      <primitive object={nodes.asu_dark_rock009} material={darkBrown} />
      <primitive object={nodes.asu_dark_rock} material={darkBrown} />
      <primitive object={nodes.asu_lite_rock} material={asuLiteRock} />
      <primitive object={nodes.asu_cactus002} material={leafGreen} />
      <primitive object={nodes.asu_cactus001} material={leafGreen} />
      <primitive object={nodes.asu_cactus} material={leafGreen} />
      <primitive object={nodes.asu_ground_cactus} material={leafGreen} />
      <primitive object={nodes.asu_ground_cactus001} material={leafGreen} />
      <primitive object={nodes.asu_ground_cactus002} material={leafGreen} />
      <primitive object={nodes.asu_logo_body} material={asuRed} />
      <primitive object={nodes.asu_logo_sun} material={gold} />
      <primitive object={nodes.grad_cap_base} material={gradCap} />
      <primitive object={nodes.grad_cap_top} material={gradCap} />
      <primitive object={nodes.grad_cap_button} material={gradCap} />
      <primitive object={nodes.grad_cap_cord} material={gold} />
      <primitive object={nodes.grad_cap_tassel} material={gold} />
      <primitive object={nodes.asu_cactus_flower001} material={cactusFlowerPink} />
      <primitive object={nodes.asu_cactus_flower} material={cactusFlowerPink} />
    </group>
  )
  // return (
  //   <group {...props} ref={ref} dispose={null} position={new THREE.Vector3(0, height, 0)}>
  //     <mesh geometry={nodes.asu_platform.geometry} position={[0.457, 0.355, -0.589]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['platform-gray'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_soil.geometry} position={[0.457, 0.841, -0.589]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['asu-soil'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_tall_rock.geometry} position={[-0.858, 1.319, -1.691]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_lite_tall_rock.geometry} position={[1.44, 1.266, -1.716]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['asu-lite-rock'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock001.geometry} position={[-1.123, 0.883, 0.716]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock002.geometry} position={[-0.649, 0.876, -0.191]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_lite_rock001.geometry} position={[0.054, 0.875, 0.066]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['asu-lite-rock'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_lite_rock002.geometry} position={[0.633, 0.875, -0.401]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['asu-lite-rock'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_lite_rock003.geometry} position={[0.52, 0.875, 0.614]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['asu-lite-rock'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_lite_rock004.geometry} position={[1.023, 0.876, 0.097]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['asu-lite-rock'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock003.geometry} position={[-0.527, 0.883, 0.64]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock004.geometry} position={[-0.086, 0.883, -0.45]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock005.geometry} position={[1.074, 0.883, -0.43]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock006.geometry} position={[0.617, 0.884, 0.107]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock007.geometry} position={[1.242, 0.883, 0.648]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock008.geometry} position={[0.012, 0.883, 0.564]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_lite_rock005.geometry} position={[-1.01, 0.875, 0.316]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['asu-lite-rock'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock009.geometry} position={[-1.151, 0.875, -0.062]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_dark_rock.geometry} position={[1.568, 0.883, -0.026]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['dark-brown'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_lite_rock.geometry} position={[-0.662, 0.875, -0.631]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['asu-lite-rock'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_cactus002.geometry} position={[1.98, 1.513, -0.624]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['leaf-green'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_cactus001.geometry} position={[1.572, 1.287, -0.363]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['leaf-green'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_cactus.geometry} position={[-1.042, 1.357, -0.622]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['leaf-green'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_ground_cactus.geometry} position={[-0.392, 0.912, 0.304]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['leaf-green'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_ground_cactus001.geometry} position={[0.294, 0.891, -0.194]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['leaf-green'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_ground_cactus002.geometry} position={[0.852, 0.896, 0.491]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['leaf-green'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_logo_body.geometry} position={[0.435, 1.443, -1.151]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['asu-red'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_logo_sun.geometry} position={[0.406, 1.471, -1.161]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials.gold.name)} />
  //     </mesh>
  //     <mesh geometry={nodes.grad_cap_base.geometry} position={[1.995, 1.026, 0.651]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['grad-cap'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.grad_cap_top.geometry} position={[1.988, 1.181, 0.65]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['grad-cap'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.grad_cap_button.geometry} position={[1.987, 1.192, 0.649]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['grad-cap'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.grad_cap_cord.geometry} position={[1.829, 1.196, 1.059]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials.gold.name)} />
  //     </mesh>
  //     <mesh geometry={nodes.grad_cap_tassel.geometry} position={[1.787, 0.908, 1.17]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials.gold.name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_cactus_flower001.geometry} position={[-0.957, 1.614, -0.665]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['cactus-flower-pink'].name)} />
  //     </mesh>
  //     <mesh geometry={nodes.asu_cactus_flower.geometry} position={[1.902, 1.896, -0.669]} rotation={[0, -1.344, 0]}>
  //       <meshMatcapMaterial matcap={matcapManager.getMatcapByName(materials['cactus-flower-pink'].name)} />
  //     </mesh>
  //   </group>
  // )
})

useGLTF.preload('./models/asu.glb')
