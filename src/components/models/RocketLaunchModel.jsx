/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 rocket-launch.glb 
*/

import React, { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export const RocketLaunchModel = forwardRef((props, ref) => {
  const { nodes, materials } = useGLTF('./models/rocket-launch.glb')
  const matcapManager = props.matcapManager;

  const platformGray = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['platform-gray'].name)})
  const rockGray = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['rock-gray'].name)})
  const rocket = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials.rocket.name)})
  const silver = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials.silver.name)})
  const vanguardRed = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['vanguard-red'].name)})
  
  return (
    <group ref={ref} {...props} dispose={null}>
      <primitive object={nodes.rocket_platform} material={platformGray} />
      <primitive object={nodes.rocket_cradle} material={rockGray} />
      <primitive object={nodes.rocket} material={rocket} />
      <primitive object={nodes.rocket_nozzle_1} material={silver} />
      <primitive object={nodes.rocket_nozzle_2} material={silver} />
      <primitive object={nodes.launch_button_platform} material={platformGray} />
      <primitive object={nodes.launch_button} material={vanguardRed} />
      <primitive object={nodes.rocket_yellow_flames_2} material={new THREE.MeshNormalMaterial()} />
      <primitive object={nodes.rocket_yellow_flames_1} material={new THREE.MeshNormalMaterial()} />
      <primitive object={nodes.exhaust_emitter} material={new THREE.MeshNormalMaterial()} />
    </group>
  )
})

useGLTF.preload('./models/rocket-launch.glb')
