/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 cubesat.glb 
*/

import React, { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export const CubesatModel = forwardRef((props, ref) => {
  const { nodes, materials } = useGLTF('./models/cubesat.glb')
  const matcapManager = props.matcapManager;

  const paper = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials.paper.name)})
  const darkBrown = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['dark-brown'].name)})
  const black = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials.black.name)})
  const silver = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials.silver.name)})
  const phxGray = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['phx-gray'].name)})

  return (
    <group {...props} ref={ref} dispose={null}>
      <primitive object={nodes.antenna} material={paper} />
      <primitive object={nodes.antenna_board} material={darkBrown} />
      <primitive object={nodes.cubesat_solar_panels} material={black} />
      <primitive object={nodes.cubesat_lens} material={black} />
      <primitive object={nodes.cubesat_silver_sides} material={silver} />
      <primitive object={nodes.cubesat_sides} material={phxGray} />
    </group>
  )
})

useGLTF.preload('./models/cubesat.glb')
