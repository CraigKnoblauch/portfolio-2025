/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 rabbit-hole.glb 
*/

import React, { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export const RabbitHoleModel = forwardRef((props, ref) => {
  const { nodes, materials } = useGLTF('./models/rabbit-hole.glb')
  const matcapManager = props.matcapManager;

  const ground = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials.ground.name)})
  const leafGreen = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['leaf-green'].name)})
  const darkBrown = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['dark-brown'].name)})
  const rockGray = new THREE.MeshMatcapMaterial({matcap: matcapManager.getMatcapByName(materials['rock-gray'].name)})

  return (
    <group ref={ref} {...props} dispose={null}>
      <primitive object={nodes.rabbit_hole_ground_rear} material={ground} />
      <primitive object={nodes.rabbit_hole_portal} material={new THREE.MeshNormalMaterial()} />
      <primitive object={nodes.canopy} material={leafGreen} />
      <primitive object={nodes.tree} material={darkBrown} />
      <primitive object={nodes.hedge008} material={leafGreen} />
      <primitive object={nodes.stem1004} material={darkBrown} />
      <primitive object={nodes['tall-bush1']} material={leafGreen} />
      <primitive object={nodes['tall-stem1']} material={darkBrown} />
      <primitive object={nodes['tall-stem2']} material={darkBrown} />
      <primitive object={nodes['wide-bush1']} material={leafGreen} />
      <primitive object={nodes['wide-bush2']} material={leafGreen} />
      <primitive object={nodes.stem2005} material={darkBrown} />
      <primitive object={nodes.Rock_Moss_2_Cube001} material={rockGray} />
      <primitive object={nodes.Rock_Moss_2_Cube002} material={rockGray} />
      <primitive object={nodes.Rock_2_Cube005} material={rockGray} />
    </group>
  )
})

useGLTF.preload('./models/rabbit-hole.glb')
