/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 rocket-launch.glb 
*/

import React, { useRef } from 'react'
import { useGLTF, shaderMaterial, useTexture } from '@react-three/drei'
import { useFrame, useLoader, extend } from '@react-three/fiber'
import * as THREE from 'three'

import yellowFlamesVertexShader from 'src/shaders/rocket-flames/yellow/vertex.glsl'
import yellowFlamesFragmentShader from 'src/shaders/rocket-flames/yellow/fragment.glsl'

const YellowFlamesMaterial = shaderMaterial(
    {
        uTime: 0,
        uPerlinTexture: new THREE.Uniform(null),
        uJumpyPerlinTexture: new THREE.Uniform(null),
        uJumpyPerlinTextureVertical: 0,
        uHotFlameColor: new THREE.Color('#fabd07'),
        uCoolFlameColor: new THREE.Color('#077cfa')
    },
    yellowFlamesVertexShader,
    yellowFlamesFragmentShader
)

extend({ YellowFlamesMaterial })

// NOTE I have to use .. instead of . for public location because the route is /explorations not just /
export const RocketLaunch = () => {
  const { nodes, materials } = useGLTF('../models/rocket-launch.glb')

  /**
   * Materials
   */

  // **************** MATCAPS ****************
  const platformMatcapTexture = useLoader(THREE.TextureLoader, '../matcaps/platform-gray.png')
  platformMatcapTexture.colorSpace = THREE.SRGBColorSpace
  const platformGray = new THREE.MeshMatcapMaterial({matcap: platformMatcapTexture})

  const rockMatcapTexture = useLoader(THREE.TextureLoader, '../matcaps/rock-gray.png')
  rockMatcapTexture.colorSpace = THREE.SRGBColorSpace
  const rockGray = new THREE.MeshMatcapMaterial({matcap: rockMatcapTexture})

  const silverMatcapTexture = useLoader(THREE.TextureLoader, '../matcaps/silver.png')
  silverMatcapTexture.colorSpace = THREE.SRGBColorSpace
  const silver = new THREE.MeshMatcapMaterial({matcap: silverMatcapTexture})
  
  const vanguardRedMatcapTexture = useLoader(THREE.TextureLoader, '../matcaps/vanguard-red.png')
  vanguardRedMatcapTexture.colorSpace = THREE.SRGBColorSpace
  const vanguardRed = new THREE.MeshMatcapMaterial({matcap: vanguardRedMatcapTexture})
  // *****************************************

  // ***************** FLAMES *****************
  // Flames perlin texture
  const perlinTexture = useTexture('../textures/perlin.png')
  perlinTexture.wrapS = THREE.RepeatWrapping
  perlinTexture.wrapT = THREE.RepeatWrapping

  // Texture to use for flame jumpiness
  const jumpyPerlinTexture = useTexture('../textures/jumpy-perlin.png')
  jumpyPerlinTexture.wrapS = THREE.RepeatWrapping
  jumpyPerlinTexture.wrapT = THREE.RepeatWrapping

  // Refs for animation
  const yellowFlamesMaterialRef1 = useRef()
  const yellowFlamesMaterialRef2 = useRef()
  // *****************************************

  /**
   * Animation
   */
  useFrame((state, delta) => {
    // ***************** FLAMES *****************
    yellowFlamesMaterialRef1.current.uTime += delta
    yellowFlamesMaterialRef2.current.uTime += delta
    // *****************************************
  })
  
  return (
    <group dispose={null}>
      <primitive object={nodes.rocket_platform} material={platformGray} />
      <primitive object={nodes.rocket_cradle} material={rockGray} />
      <primitive object={nodes.rocket} material={new THREE.MeshNormalMaterial()} />
      <primitive object={nodes.rocket_nozzle_1} material={silver} />
      <primitive object={nodes.rocket_nozzle_2} material={silver} />
      <primitive object={nodes.launch_button_platform} material={platformGray} />
      <primitive object={nodes.launch_button} material={vanguardRed} />
      <primitive object={nodes.rocket_yellow_flames_1}>
        <yellowFlamesMaterial ref={yellowFlamesMaterialRef1} 
                              uPerlinTexture={perlinTexture} 
                              uJumpyPerlinTexture={jumpyPerlinTexture}
                              uJumpyPerlinTextureVertical={0.5}
                              transparent 
        />
      </primitive>
      <primitive object={nodes.rocket_yellow_flames_2}>
        <yellowFlamesMaterial ref={yellowFlamesMaterialRef2} 
                              uPerlinTexture={perlinTexture} 
                              uJumpyPerlinTexture={jumpyPerlinTexture}
                              uJumpyPerlinTextureVertical={0.25}
                              transparent 
        />
      </primitive>
      <primitive object={nodes.exhaust_emitter} material={new THREE.MeshNormalMaterial()} />
    </group>
  )
}

useGLTF.preload('./models/rocket-launch.glb')
